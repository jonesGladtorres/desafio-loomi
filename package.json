{
  "name": "desafio-loomi-nestjs",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "build:clients": "nest build clients",
    "build:transactions": "nest build transactions",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:clients": "nest start clients",
    "start:clients:dev": "nest start clients --watch",
    "start:clients:debug": "nest start clients --debug --watch",
    "start:clients:prod": "node dist/apps/clients/main",
    "start:transactions": "nest start transactions",
    "start:transactions:dev": "nest start transactions --watch",
    "start:transactions:debug": "nest start transactions --debug --watch",
    "start:transactions:prod": "node dist/apps/transactions/main",
    "prisma:generate": "npx prisma generate",
    "prisma:migrate": "npx prisma migrate dev",
    "prisma:migrate:deploy": "npx prisma migrate deploy",
    "prisma:studio": "npx prisma studio",
    "prisma:format": "npx prisma format",
    "docker:start": "docker-compose up --build -d && echo '\n╔════════════════════════════════════════════════════════════════╗' && echo '║           🚀 Loomi - Sistema Iniciado com Sucesso!           ║' && echo '╚════════════════════════════════════════════════════════════════╝\n' && echo '📡 APIs REST:' && echo '   → Clients API ......... http://localhost:3001/api/users' && echo '   → Transactions API .... http://localhost:3002/api/transactions\n' && echo '📚 Documentação Swagger:' && echo '   → Clients Swagger ..... http://localhost:3001/api/docs/users' && echo '   → Transactions Swagger  http://localhost:3002/api/docs/transactions\n' && echo '🔧 Infraestrutura:' && echo '   → PostgreSQL .......... localhost:5432 (loomi_user/loomi_password)' && echo '   → Redis ............... localhost:6379' && echo '   → RabbitMQ ............ localhost:5672' && echo '   → RabbitMQ UI ......... http://localhost:15672 (loomi_user/loomi_password)\n' && echo '💡 Comandos Úteis:' && echo '   → Ver status .......... npm run docker:ps' && echo '   → Ver logs ............ npm run docker:logs' && echo '   → Reiniciar ........... npm run docker:restart' && echo '   → Parar tudo .......... npm run docker:stop' && echo '   → Limpar tudo ......... npm run docker:clean\n' && echo '✨ Dica: Acesse o Swagger para testar os endpoints interativamente!\n'",
    "docker:stop": "docker-compose down",
    "docker:restart": "docker-compose restart",
    "docker:logs": "docker-compose logs -f",
    "docker:ps": "docker-compose ps",
    "docker:clean": "docker-compose down -v --rmi all",
    "aws:deploy": "./scripts/aws-deploy.sh",
    "aws:update": "./scripts/aws-update.sh",
    "aws:update:clients": "./scripts/aws-update.sh clients",
    "aws:update:transactions": "./scripts/aws-update.sh transactions",
    "aws:status": "./scripts/aws-status.sh",
    "aws:logs:clients": "./scripts/aws-logs.sh clients",
    "aws:logs:transactions": "./scripts/aws-logs.sh transactions",
    "aws:destroy": "./scripts/aws-destroy.sh",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:cov:open": "jest --coverage && open coverage/lcov-report/index.html",
    "test:cov:show": "open coverage/lcov-report/index.html",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e:clients": "jest --config ./apps/clients/test/jest-e2e.json",
    "test:e2e:transactions": "jest --config ./apps/transactions/test/jest-e2e.json",
    "test:security": "./scripts/test-security.sh",
    "test:security:aws": "./scripts/test-security.sh http://$(cd terraform && terraform output -raw alb_dns_name 2>/dev/null || echo 'localhost:3001')"
  },
  "dependencies": {
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.0.1",
    "@nestjs/core": "^11.0.1",
    "@nestjs/mapped-types": "*",
    "@nestjs/microservices": "^11.1.6",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/throttler": "^6.4.0",
    "@prisma/client": "^6.17.1",
    "@types/uuid": "^10.0.0",
    "amqp-connection-manager": "^5.0.0",
    "amqplib": "^0.10.9",
    "cache-manager": "^7.2.4",
    "cache-manager-redis-store": "^3.0.1",
    "class-sanitizer": "^1.0.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^8.1.0",
    "helmet": "^8.1.0",
    "hpp": "^0.2.3",
    "redis": "^5.8.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "uuid": "^13.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "prisma": "^6.17.1",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/"
    ],
    "moduleNameMapper": {
      "^@app/prisma/(.*)$": "<rootDir>/libs/prisma/src/$1",
      "^@app/prisma$": "<rootDir>/libs/prisma/src"
    }
  }
}