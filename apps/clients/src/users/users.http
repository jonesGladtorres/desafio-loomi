### Arquivo de teste para a API de Usuários
### Use com REST Client (VSCode Extension) ou ferramentas como Postman/Insomnia
### 
### IMPORTANTE: Os endpoints GET estão com cache Redis habilitado!
### - Primeira requisição: busca do banco
### - Requisições subsequentes: retorna do cache (muito mais rápido)
### - Cache expira após 60 segundos ou ao modificar dados

@baseUrl = http://localhost:3001
@contentType = application/json

### Criar um novo usuário
POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{
  "name": "João Silva",
  "email": "joao.silva@example.com",
  "cpf": "123.456.789-00",
  "phone": "(11) 98765-4321",
  "address": "Rua das Flores, 123",
  "city": "São Paulo",
  "state": "SP",
  "zipCode": "01234-567"
}

### Buscar todos os usuários (com cache)
# Primeira requisição: busca do banco e cacheia
# Requisições seguintes: retorna do cache (muito mais rápido!)
GET {{baseUrl}}/api/users

### Buscar todos os usuários novamente (do cache)
# Esta requisição deve ser MUITO mais rápida
GET {{baseUrl}}/api/users

### Buscar usuário por ID (com cache)
# Substitua {userId} por um ID válido
# Exemplo: GET {{baseUrl}}/api/users/123e4567-e89b-12d3-a456-426614174000
GET {{baseUrl}}/api/users/{userId}

### Buscar o mesmo usuário novamente (do cache)
# Esta requisição retorna do cache
GET {{baseUrl}}/api/users/{userId}

### Atualizar um usuário (atualização parcial)
# Substitua {userId} por um ID válido
PATCH {{baseUrl}}/api/users/{userId}
Content-Type: {{contentType}}

{
  "name": "João Silva Atualizado",
  "phone": "(11) 91234-5678"
}

### Atualizar apenas o email do usuário
# Substitua {userId} por um ID válido
PATCH {{baseUrl}}/api/users/{userId}
Content-Type: {{contentType}}

{
  "email": "joao.novo@example.com"
}

### Atualizar endereço completo do usuário
# Substitua {userId} por um ID válido
PATCH {{baseUrl}}/api/users/{userId}
Content-Type: {{contentType}}

{
  "address": "Avenida Paulista, 1000",
  "city": "São Paulo",
  "state": "SP",
  "zipCode": "01310-100"
}

### Deletar um usuário
# Substitua {userId} por um ID válido
# IMPORTANTE: Isso invalidará o cache do usuário e da lista!
DELETE {{baseUrl}}/api/users/{userId}

### ============================================
### TESTES DE CACHE
### ============================================

### Teste 1: Verificar cache funcionando
# 1. Execute a requisição abaixo 2 vezes
# 2. A segunda deve ser MUITO mais rápida
GET {{baseUrl}}/api/users

### Teste 2: Verificar invalidação de cache
# 1. Execute GET acima para criar o cache
# 2. Execute o PATCH abaixo para invalidar
# 3. Execute GET novamente - deve buscar do banco novamente
PATCH {{baseUrl}}/api/users/{userId}
Content-Type: {{contentType}}

{
  "name": "Teste de Cache"
}

### Teste 3: Verificar cache após criação
# 1. Execute GET para cachear
# 2. Crie um novo usuário abaixo
# 3. Execute GET novamente - cache foi invalidado, lista atualizada
POST {{baseUrl}}/api/users
Content-Type: {{contentType}}

{
  "name": "Novo Usuário",
  "email": "novo@example.com"
}

